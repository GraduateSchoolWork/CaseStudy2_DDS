dfTest <- data[-trainIndices,]
classifications1 <- knn.cv(dfTrain[,18],dfTrain$Attrition, k = 10)
confusionMatrix(table(classifications1,dfTrain$Attrition))
colnames(data)
classifications1 <- knn.cv(dfTrain[,17],dfTrain$Attrition, k = 10)
classifications1 <- knn.cv(dfTrain[,17],dfTrain$Attrition, k = 10)
classifications1 <- knn.cv(dfTrain[,19],dfTrain$Attrition, k = 10)
str(data)
classifications1 <- knn.cv(dfTrain[,2],dfTrain$Attrition, k = 10)
confusionMatrix(table(classifications1,dfTrain$Attrition))
classifications1 <- knn.cv(dfTrain[,5],dfTrain$Attrition, k = 10)
confusionMatrix(table(classifications1,dfTrain$Attrition))
classifications1 <- knn.cv(dfTrain[,c(5,18)],dfTrain$Attrition, k = 10)
confusionMatrix(table(classifications1,dfTrain$Attrition))
#knn model
classifications <- knn(dfTrain[,18], dfTest[,18], dfTrain$Attrition, k = 50, prob = TRUE)
classifications1 <- knn.cv(dfTrain[,c(5,18)],dfTrain$Attrition, k = 50)
confusionMatrix(table(classifications1,dfTrain$Attrition))
classifications1 <- knn.cv(dfTrain[,c(5,18)],dfTrain$Attrition, k = 2)
confusionMatrix(table(classifications1,dfTrain$Attrition))
classifications1 <- knn.cv(dfTrain[,c(5,18)],dfTrain$Attrition, k = 5)
confusionMatrix(table(classifications1,dfTrain$Attrition))
classifications1 <- knn.cv(dfTrain[,c(5,18)],dfTrain$Attrition, k = 5)
confusionMatrix(table(classifications1,dfTrain$Attrition))
classifications1 <- knn.cv(dfTrain[,c(5,18)],dfTrain$Attrition, k = 5)
confusionMatrix(table(classifications1,dfTrain$Attrition))
classifications1 <- knn.cv(dfTrain[,c(5,18)],dfTrain$Attrition, k = 10)
confusionMatrix(table(classifications1,dfTrain$Attrition))
library(GGally)
library(cowplot)
library(class)
library(caret)
library(e1071)
attrition.df <- read.csv("CaseStudy2-data.csv", header = T)
# divorce contribute to attrition
bar <- ggplot(attrition.df, aes(x=MaritalStatus, fill = MaritalStatus)) +
geom_bar() +
facet_wrap(~Attrition) +
ggtitle("Attrition Dependent on Marital Status ") +
xlab("Attrition") +
ylab("Count")
# Yes Attrition
# make new data frames for married, divorced, and single
df1 <- attrition.df %>%
filter(Attrition == "Yes")
df1length <- NROW(df1)
df1married <- length(grep("Married", df1$MaritalStatus))
df1divorced <- length(grep("Divorced", df1$MaritalStatus))
df1single <- length(grep("Single", df1$MaritalStatus))
Yes_df <- data.frame(MaritalStatus = c("Married","Divorced","Single"),
Value = c(df1married,df1divorced,df1single))
plot1 <- ggplot(Yes_df, aes(x="", y=Value, fill=MaritalStatus)) +
geom_bar(width = 1, stat = "identity") + xlab("") + ylab("") + ggtitle("Attrition: Yes")
pie1 <- plot1 + coord_polar("y", start=0)
# No Attrition
# make new data frames for married, divorced, and single
df2 <- data %>%
filter(Attrition == "No")
# No Attrition
# make new data frames for married, divorced, and single
df2 <- attrition.df %>%
filter(Attrition == "No")
df2length <- NROW(df2)
df2married <- length(grep("Married", df2$MaritalStatus))
df2divorced <- length(grep("Divorced", df2$MaritalStatus))
df2single <- length(grep("Single", df2$MaritalStatus))
No_df <- data.frame(MaritalStatus = c("Married","Divorced","Single"),
Value = c(df2married,df2divorced,df2single))
plot2 <- ggplot(No_df, aes(x="", y=Value, fill=MaritalStatus)) +
geom_bar(width = 1, stat = "identity") + xlab("") + ylab("") + ggtitle("Attrition: No")
pie2 <- plot2 + coord_polar("y", start=0)
piecharts <- plot_grid(pie2,pie1, ncol = 2,  labels = c("B","C"))
allplots <- plot_grid(bar,piecharts, nrow = 2, labels = "A")
allplots
ggpairs(attrition.df, columns = c(20,21,3))
ggplot(attrition.df, aes(x=Attrition, y=JobSatisfaction)) +
geom_jitter(height = 0.2, width = 0.2)
ggplot(attrition.df, aes(x=Attrition, y=JobSatisfaction)) +
geom_jitter(height = 0.2, width = 0.15)
ggplot(attrition.df, aes(x=Attrition, y=JobSatisfaction)) +
geom_jitter(height = 0.2, width = 0.25)
ggplot(attrition.df, aes(x=Attrition, y=JobSatisfaction)) +
geom_jitter(height = 0.2, width = 0.20)
ggplot(attrition.df, aes(x=MonthlyIncome, fill = Attrition)) +
geom_histogram() +
facet_wrap(~Attrition) +
ggtitle("Monthly Income Based on Attrition") +
xlab("Monthly Income") +
ylab("Count")
ggplot(attrition.df, aes(x=MonthlyIncome, fill = Attrition)) +
geom_histogram() +
facet_grid(~Attrition) +
ggtitle("Monthly Income Based on Attrition") +
xlab("Monthly Income") +
ylab("Count")
str(attrition.df)
ggplot(attrition.df, aes(x=MonthlyIncome, fill = Attrition)) +
geom_histogram() +
facet_grid(~JobRole) +
ggtitle("Monthly Income Based on Attrition") +
xlab("Monthly Income") +
ylab("Count")
ggplot(attrition.df, aes(x=MonthlyIncome, fill = Attrition)) +
geom_histogram() +
facet_wrap(~JobRole) +
ggtitle("Monthly Income Based on Attrition") +
xlab("Monthly Income") +
ylab("Count")
ggplot(attrition.df, aes(x=MonthlyIncome, fill = Attrition)) +
geom_histogram() +
facet_wrap(~JobRole) +
ggtitle("Monthly Income Based on Job Role") +
xlab("Monthly Income") +
ylab("Count")
splitPerc <- .7
trainIndices <- sample(1:dim(attrition.df)[1],round(splitPerc * dim(attrition.df)[1]))
dfTrain <- attrition.df[trainIndices,]
dfTest <- attrition.df[-trainIndices,]
#knn model
classifications <- knn(dfTrain[,18], dfTest[,18], dfTrain$Attrition, k = 50, prob = TRUE)
#knn model
classifications <- knn(dfTrain[,5], dfTest[,5], dfTrain$Attrition, k = 50, prob = TRUE)
#knn model
classifications <- knn(dfTrain[,5], dfTest[,5], dfTrain$Attrition, k = 3, prob = TRUE)
#knn model
classifications <- knn(dfTrain[,18], dfTest[,18], dfTrain$Attrition, k = 3, prob = TRUE)
knitr::opts_chunk$set(echo = TRUE)
#Virginica v. Versicolor
set.seed(6)
splitPerc = .75
irisVersVirg = iris %>% filter(Species == "versicolor" | Species == "virginica")
summary(irisVersVirg)
irisVersVirg = droplevels(irisVersVirg,exclude = "setosa")
summary(irisVersVirg)
trainIndices = sample(1:dim(irisVersVirg)[1],round(splitPerc * dim(irisVersVirg)[1]))
train = irisVersVirg[trainIndices,]
test = irisVersVirg[-trainIndices,]
# k = 3
classifications = knn(train[,c(1,2)],test[,c(1,2)],train$Species, prob = TRUE, k = 3)
table(classifications,test$Species)
confusionMatrix(table(classifications,test$Species))
dim(train)
dim(test)
dim(dfTrain)
dim(dfTest)
#knn model
classifications <- knn(dfTrain[,c(5,18)], dfTest[,c(5,18)], dfTrain$Attrition,
prob = TRUE, k = 5)
table(dfTest$Attrition,classifications)
confusionMatrix(table(dfTest$Attrition,classifications))
#knn model
classifications <- knn(dfTrain[,c(18)], dfTest[,c(18)], dfTrain$Attrition,
prob = TRUE, k = 5)
#knn model
classifications <- knn(dfTrain[,c(18)], dfTest[,c(18)], dfTrain$Attrition,
prob = TRUE, k = 5)
str(attrition.df)
#knn model
classifications <- knn(dfTrain[,c(18,20)], dfTest[,c(18,20)], dfTrain$Attrition,
prob = TRUE, k = 5)
table(dfTest$Attrition,classifications)
confusionMatrix(table(dfTest$Attrition,classifications))
table(dfTest$Attrition,classifications)
#knn model
classifications <- knn(dfTrain[,c(18,16)], dfTest[,c(18,16)], dfTrain$Attrition,
prob = TRUE, k = 5)
table(dfTest$Attrition,classifications)
#knn model
classifications <- knn(dfTrain[,c(18,17)], dfTest[,c(18,17)], dfTrain$Attrition,
prob = TRUE, k = 5)
#knn model
classifications <- knn(dfTrain[,c(18,19)], dfTest[,c(18,19)], dfTrain$Attrition,
prob = TRUE, k = 5)
#knn model
classifications <- knn(dfTrain[,c(18,8)], dfTest[,c(18,8)], dfTrain$Attrition,
prob = TRUE, k = 5)
table(dfTest$Attrition,classifications)
confusionMatrix(table(dfTest$Attrition,classifications))
attrition.df[18]
classifications1 <- knn.cv(dfTrain[,c(5,18)],dfTrain$Attrition, k = 10)
confusionMatrix(table(classifications1,dfTrain$Attrition))
classifications1 <- knn.cv(dfTrain[,c(8,18)],dfTrain$Attrition, k = 10)
confusionMatrix(table(classifications1,dfTrain$Attrition))
str(attrition.df)
ggplot(attrition.df, aes(x=PerformanceRating, color = Attrition)) +
geom_histogram() +
facet_wrap(~JobRole) +
ggtitle("Monthly Income Based on Job Role") +
xlab("Monthly Income") +
ylab("Count")
ggplot(attrition.df, aes(x=PerformanceRating, fill = Attrition)) +
geom_histogram() +
facet_wrap(~JobRole) +
ggtitle("Monthly Income Based on Job Role") +
xlab("Monthly Income") +
ylab("Count")
ggplot(attrition.df, aes(x=PerformanceRating, fill = Attrition)) +
geom_bar() +
facet_wrap(~JobRole) +
ggtitle("Monthly Income Based on Job Role") +
xlab("Monthly Income") +
ylab("Count")
ggplot(attrition.df, aes(x=PerformanceRating, fill = Attrition)) +
geom_bar(position = "stack") +
facet_wrap(~JobRole) +
ggtitle("Monthly Income Based on Job Role") +
xlab("Performance Rating") +
ylab("Count")
ggplot(attrition.df, aes(x=PerformanceRating, fill = Attrition)) +
geom_bar(position = "stack") +
facet_wrap(~JobRole) +
ggtitle("Monthly Income Based on Job Role") +
xlab("Performance Rating") +
ylab("Count")
ggplot(attrition.df, aes(x=PerformanceRating, y=TotalWorkingYears, color = Attrition)) +
geom_point() +
facet_wrap(~JobRole) +
ggtitle("Monthly Income Based on Job Role") +
xlab("Performance Rating") +
ylab("Count")
ggplot(attrition.df, aes(x=TotalWorkingYears, y=PercentSalaryHike, color = Attrition)) +
geom_point() +
facet_wrap(~JobRole) +
ggtitle("Monthly Income Based on Job Role") +
xlab("Performance Rating") +
ylab("Count")
ggplot(attrition.df, aes(x=TotalWorkingYears, y=PercentSalaryHike, color = Attrition)) +
geom_point() +
facet_wrap(~JobRole) +
ggtitle("Total Working Years vs Percent Salary Hike") +
xlab("Total Working Years") +
ylab("Percent Salary Hike")
colnames(attrition.df)
#knn model
classifications <- knn(dfTrain[,c(25,30)], dfTest[,c(25,30)], dfTrain$Attrition,
prob = TRUE, k = 5)
table(dfTest$Attrition,classifications)
confusionMatrix(table(dfTest$Attrition,classifications))
ggplot(attrition.df, aes(x=TotalWorkingYears, y=PercentSalaryHike, color = Attrition)) +
geom_point() +
ggtitle("Total Working Years vs Percent Salary Hike") +
xlab("Total Working Years") +
ylab("Percent Salary Hike") +
facet_wrap(~JobRole)
ggplot(attrition.df, aes(x=TotalWorkingYears, y=PercentSalaryHike, color = Attrition)) +
geom_point() +
ggtitle("Total Working Years vs Percent Salary Hike") +
xlab("Total Working Years") +
ylab("Percent Salary Hike")
ggplot(attrition.df, aes(x=TotalWorkingYears, y=PercentSalaryHike, color = Attrition)) +
geom_point(position = "jitter") +
ggtitle("Total Working Years vs Percent Salary Hike") +
xlab("Total Working Years") +
ylab("Percent Salary Hike") +
facet_wrap(~JobRole)
ggplot(attrition.df, aes(x=TotalWorkingYears, y=PercentSalaryHike, color = Attrition)) +
geom_point(position = "jitter") +
ggtitle("Total Working Years vs Percent Salary Hike") +
xlab("Total Working Years") +
ylab("Percent Salary Hike")
ggplot(attrition.df, aes(x=TotalWorkingYears, y=PercentSalaryHike, color = Attrition)) +
geom_point() +
ggtitle("Total Working Years vs Percent Salary Hike") +
xlab("Total Working Years") +
ylab("Percent Salary Hike") +
facet_wrap(~JobRole)
#knn model
classifications <- knn(dfTrain[,c(25,30)], dfTest[,c(25,30)], dfTrain$Attrition,
prob = TRUE, k = 10)
table(dfTest$Attrition,classifications)
confusionMatrix(table(dfTest$Attrition,classifications))
train = attrition.df[trainIndices,]
test = attrition.df[-trainIndices,]
train = na.omit(train)
test = na.omit(test)
#Loop for many k and the average of many training / test partition
iterations = 100
numks = 50
masterAcc = matrix(nrow = iterations, ncol = numks)
for(j in 1:iterations)
{
accs = data.frame(accuracy = numeric(100), k = numeric(100))
trainIndices = sample(1:dim(attrition.df)[1],round(splitPerc * dim(attrition.df)[1]))
train = attrition.df[trainIndices,]
test = attrition.df[-trainIndices,]
train = na.omit(train)
test = na.omit(test)
for(i in 1:numks)
{
classifications = knn(train[,c(25,30)],test[,c(25,30)],train$Attrition, prob = TRUE, k = i)
table(classifications,test$Attrition)
CM = confusionMatrix(table(classifications,test$Attrition))
masterAcc[j,i] = CM$overall[1]
}
}
MeanAcc = colMeans(masterAcc)
plot(seq(1,numks,1),MeanAcc, type = "l", xlab = "k", ylab = "Mean Accuracy", main = "Mean Accuracy of k Values")
#knn model
classifications <- knn(dfTrain[,c(25,30)], dfTest[,c(25,30)], dfTrain$Attrition,
prob = TRUE, k = 10)
table(dfTest$Attrition,classifications)
confusionMatrix(table(dfTest$Attrition,classifications))
#knn model
classifications <- knn(dfTrain[,c(25,30)], dfTest[,c(25,30)], dfTrain$Attrition,
prob = TRUE, k = 30)
table(dfTest$Attrition,classifications)
confusionMatrix(table(dfTest$Attrition,classifications))
#knn model
classifications <- knn(dfTrain[,c(25,30)], dfTest[,c(25,30)], dfTrain$Attrition,
prob = TRUE, k = 20)
table(dfTest$Attrition,classifications)
confusionMatrix(table(dfTest$Attrition,classifications))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidyverse)
library(GGally)
library(cowplot)
library(class)
library(caret)
library(e1071)
attrition.df <- read.csv("CaseStudy2-data.csv", header = T)
str(attrition.df)
# divorce contribute to attrition
bar <- ggplot(attrition.df, aes(x=MaritalStatus, fill = MaritalStatus)) +
geom_bar() +
facet_wrap(~Attrition) +
ggtitle("Attrition Dependent on Marital Status ") +
xlab("Attrition") +
ylab("Count")
# Yes Attrition
# make new data frames for married, divorced, and single
df1 <- attrition.df %>%
filter(Attrition == "Yes")
df1length <- NROW(df1)
df1married <- length(grep("Married", df1$MaritalStatus))
df1divorced <- length(grep("Divorced", df1$MaritalStatus))
df1single <- length(grep("Single", df1$MaritalStatus))
Yes_df <- data.frame(MaritalStatus = c("Married","Divorced","Single"),
Value = c(df1married,df1divorced,df1single))
plot1 <- ggplot(Yes_df, aes(x="", y=Value, fill=MaritalStatus)) +
geom_bar(width = 1, stat = "identity") + xlab("") + ylab("") + ggtitle("Attrition: Yes")
# No Attrition
# make new data frames for married, divorced, and single
df2 <- attrition.df %>%
filter(Attrition == "No")
df2married <- length(grep("Married", df2$MaritalStatus))
df2divorced <- length(grep("Divorced", df2$MaritalStatus))
df2single <- length(grep("Single", df2$MaritalStatus))
No_df <- data.frame(MaritalStatus = c("Married","Divorced","Single"),
Value = c(df2married,df2divorced,df2single))
plot2 <- ggplot(No_df, aes(x="", y=Value, fill=MaritalStatus)) +
geom_bar(width = 1, stat = "identity") + xlab("") + ylab("") + ggtitle("Attrition: No")
pie2 <- plot2 + coord_polar("y", start=0)
piecharts <- plot_grid(pie2,pie1, ncol = 2,  labels = c("B","C"))
piecharts <- plot_grid(pie2,pie1, ncol = 2,  labels = c("B","C"))
plot1 <- ggplot(Yes_df, aes(x="", y=Value, fill=MaritalStatus)) +
geom_bar(width = 1, stat = "identity") + xlab("") + ylab("") + ggtitle("Attrition: Yes")
pie1 <- plot1 + coord_polar("y", start=0)
piecharts <- plot_grid(pie2,pie1, ncol = 2,  labels = c("B","C"))
piecharts <- plot_grid(pie2,pie1, ncol = 2,  labels = c("B","C"))
allplots <- plot_grid(bar,piecharts, nrow = 2, labels = "A")
piecharts <- plot_grid(pie2,pie1, ncol = 2,  labels = c("B","C"))
allplots <- plot_grid(bar,piecharts, nrow = 2, labels = "A")
allplots
ggpairs(attrition.df, columns = c(20,21,3))
ggplot(attrition.df, aes(x=Attrition, y=JobSatisfaction)) +
geom_jitter(height = 0.2, width = 0.20)
ggplot(attrition.df, aes(x=MonthlyIncome, fill = Attrition)) +
geom_histogram() +
facet_wrap(~Attrition) +
ggtitle("Monthly Income Based on Attrition") +
xlab("Monthly Income") +
ylab("Count")
ggplot(attrition.df, aes(x=MonthlyIncome, fill = Attrition)) +
geom_histogram() +
facet_wrap(~JobRole) +
ggtitle("Monthly Income Based on Job Role") +
xlab("Monthly Income") +
ylab("Count")
ggplot(attrition.df, aes(x=PerformanceRating, fill = Attrition)) +
geom_bar(position = "fill") +
facet_wrap(~JobRole) +
ggtitle("Performance Rating Based on Job Role") +
xlab("Performance Rating") +
ylab("Count")
ggplot(attrition.df, aes(x=PerformanceRating, fill = Attrition)) +
geom_bar(position = "fill") +
facet_wrap(~JobRole) +
ggtitle("Performance Rating Based on Job Role") +
xlab("Performance Rating") +
ylab("Count") +
scale_y_continuous(labels = scales::percent)
ggplot(attrition.df, aes(x=TotalWorkingYears, y=PercentSalaryHike, color = Attrition)) +
geom_point() +
ggtitle("Total Working Years vs Percent Salary Hike") +
xlab("Total Working Years") +
ylab("Percent Salary Hike") +
facet_wrap(~JobRole)
splitPerc <- .7
trainIndices <- sample(1:dim(attrition.df)[1],round(splitPerc * dim(attrition.df)[1]))
dfTrain <- attrition.df[trainIndices,]
dfTest <- attrition.df[-trainIndices,]
dfTrain <- na.omit(dfTrain)
dfTest <- na.omit(dfTest)
colnames(attrition.df)
ggplot(attrition.df, aes(x=TotalWorkingYears, y=PercentSalaryHike, color = Attrition)) +
geom_point() +
ggtitle("Total Working Years vs Percent Salary Hike") +
xlab("Total Working Years") +
ylab("Percent Salary Hike")
ggplot(attrition.df, aes(x=TotalWorkingYears, y=PercentSalaryHike, color = Attrition)) +
geom_point() +
ggtitle("Total Working Years vs Percent Salary Hike") +
xlab("Total Working Years") +
ylab("Percent Salary Hike") +
geom_jitter()
ggplot(attrition.df, aes(x=TotalWorkingYears, y=PercentSalaryHike, color = Attrition)) +
geom_point() +
ggtitle("Total Working Years vs Percent Salary Hike") +
xlab("Total Working Years") +
ylab("Percent Salary Hike") +
facet_wrap(~JobRole)
#knn model
classifications <- knn(dfTrain[,c(25,30)], dfTest[,c(25,30)], dfTrain$Attrition,
prob = TRUE, k = 20)
table(dfTest$Attrition,classifications)
table(dfTest$Attrition,classifications)
confusionMatrix(table(dfTest$Attrition,classifications))
classifications1 <- knn.cv(dfTrain[,c(8,18)],dfTrain$Attrition, k = 10)
confusionMatrix(table(classifications1,dfTrain$Attrition))
classifications1 <- knn.cv(dfTrain[,c(8,18)],dfTrain$Attrition, k = 10)
confusionMatrix(table(classifications1,dfTrain$Attrition))
classifications1 <- knn.cv(dfTrain[,c(25,30)],dfTrain$Attrition, k = 10)
confusionMatrix(table(classifications1,dfTrain$Attrition))
classifications1 <- knn.cv(dfTrain[,c(25,30,18)],dfTrain$Attrition, k = 10)
confusionMatrix(table(classifications1,dfTrain$Attrition))
classifications1 <- knn.cv(dfTrain[,c(25,30,18)],dfTrain$Attrition, k = 10)
confusionMatrix(table(classifications1,dfTrain$Attrition))
str(attrition.df)
ggplot(attrition.df, aes(x=Age, y=MonthlyIncome, color = Attrition)) +
geom_point() +
facet_wrap(~JobRole)
ggplot(attrition.df, aes(x=Age, y=MonthlyIncome, color = Attrition)) +
geom_point()
ggplot(attrition.df, aes(x=Age, y=MonthlyIncome, color = Attrition)) +
geom_point() +
facet_wrap(~JobRole)
classifications1 <- knn.cv(dfTrain[,c(2,20)],dfTrain$Attrition, k = 10)
confusionMatrix(table(classifications1,dfTrain$Attrition))
classifications1 <- knn.cv(dfTrain[,c(2,20)],dfTrain$Attrition, k = 10)
confusionMatrix(table(classifications1,dfTrain$Attrition))
sales.df <- attrition.df %>%
filter(JobRole == "Sales Representative")
head(salses.df)
head(sales.df)
ggplot(sales.df, aes(x=Age, y=MonthlyIncome, color = Attrition)) +
geom_point()
classifications2 <- knn.cv(sales.df[,c(2,20)],sales.df$Attrition, k = 10)
confusionMatrix(table(classifications1,sales.df$Attrition))
classifications2 <- knn.cv(sales.df[,c(2,20)],sales.df$Attrition, k = 10)
confusionMatrix(table(classifications1,sales.df$Attrition))
classifications2 <- knn.cv(sales.df[,c(2,20)],sales.df$Attrition, k = 10)
confusionMatrix(table(classifications2,sales.df$Attrition))
sales.df <- attrition.df %>%
filter(JobRole == "Research Scientist")
ggplot(sales.df, aes(x=Age, y=MonthlyIncome, color = Attrition)) +
geom_point()
classifications2 <- knn.cv(sales.df[,c(2,20)],sales.df$Attrition, k = 10)
confusionMatrix(table(classifications2,sales.df$Attrition))
ggplot(attrition.df, aes(x=Age, y=MonthlyIncome, color = Attrition)) +
geom_point() +
facet_wrap(~JobRole)
sales.df <- attrition.df %>%
filter(JobRole == "Sales Executive")
ggplot(sales.df, aes(x=Age, y=MonthlyIncome, color = Attrition)) +
geom_point()
classifications2 <- knn.cv(sales.df[,c(2,20)],sales.df$Attrition, k = 10)
confusionMatrix(table(classifications2,sales.df$Attrition))
sales.df <- attrition.df %>%
filter(JobRole == "Sales Representative")
ggplot(sales.df, aes(x=Age, y=MonthlyIncome, color = Attrition)) +
geom_point()
ggplot(sales.df, aes(x=Age, y=MonthlyIncome, color = Attrition)) +
geom_point()
classifications2 <- knn.cv(sales.df[,c(2,20)],sales.df$Attrition, k = 3)
confusionMatrix(table(classifications2,sales.df$Attrition))
classifications2 <- knn.cv(sales.df[,c(2,20)],sales.df$Attrition, k = 5)
confusionMatrix(table(classifications2,sales.df$Attrition))
sales.df <- attrition.df %>%
filter(JobRole == "Laboratory Technician")
ggplot(sales.df, aes(x=Age, y=MonthlyIncome, color = Attrition)) +
geom_point()
classifications2 <- knn.cv(sales.df[,c(2,20)],sales.df$Attrition, k = 5)
confusionMatrix(table(classifications2,sales.df$Attrition))
sales.df <- attrition.df %>%
filter(JobRole == "Laboratory Technician")
ggplot(sales.df, aes(x=Age, y=MonthlyIncome, color = Attrition)) +
geom_point()
classifications2 <- knn.cv(sales.df[,c(2,20)],sales.df$Attrition, k = 5)
confusionMatrix(table(classifications2,sales.df$Attrition))
sales.df <- attrition.df %>%
filter(JobRole == "Research Scientist")
ggplot(sales.df, aes(x=Age, y=MonthlyIncome, color = Attrition)) +
geom_point()
classifications2 <- knn.cv(sales.df[,c(2,20)],sales.df$Attrition, k = 5)
confusionMatrix(table(classifications2,sales.df$Attrition))
classifications2 <- knn.cv(sales.df[,c(2,20)],sales.df$Attrition, k = 15)
confusionMatrix(table(classifications2,sales.df$Attrition))
model = naiveBayes(Attrition~.,data = attrition.df)
predict(model,attrition.df[,c(2,20)])
predict(model,attrition.df)
predict(model,df, type = "raw") #gi
